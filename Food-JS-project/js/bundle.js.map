{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;;AC/HW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,UAAU,MAAM,SAAS;AACxD,sDAAsD,WAAW;AACjE,oDAAoD,WAAW;AAC/D;AACA;AACA;AACA,8DAA8D,WAAW;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iCAAiC;AAC3D;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA,IAAI,+DAAW;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;AClFH;AAGa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAQ;AACpB;AACA,gCAAgC;AAChC;AACA,uCAAuC;AACvC,sDAAsD;AACtD,4CAA4C;AAC5C,iBAAiB,gBAAgB;AACjC;AACA,iBAAiB,kBAAkB;AACnC,kCAAkC;AAClC,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,QAAQ,iDAAS,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAU;AACtB,SAAS;AACT;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;ACrGpB;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iEAAe,KAAK,EAAC;AACtB;AACA;AAGA;;;;;;;;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C,kCAAkC,WAAW;AAC7C,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,8CAA8C,4BAA4B;AAC1E;AACA;AACA,yBAAyB,OAAO;AAChC,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,8CAA8C,4BAA4B;AAC1E;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,OAAO;AAChE;AACA;AACA,0CAA0C,WAAW;AACrD,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,iEAAe,MAAM,EAAC;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,cAAc;AAC3C,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,WAAW;AAC5C,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;;;;;;;;;;;;;;AC7QP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;AChEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;AC9EpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,SAAS;AACT;AACA,KAAK;AACL,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,IAAI,YAAY,WAAW;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGE;;;;;;;UCxCF;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNA;AACkC;AACE;AACA;AACA;AACF;AACE;AACE;AAGb;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,yDAAS;AACjD;AACA;AACA,EAAE,yDAAI;AACN,EAAE,0DAAK;AACP,EAAE,0DAAK;AACP,EAAE,0DAAK;AACP,EAAE,yDAAI;AACN,EAAE,0DAAK;AACP,EAAE,2DAAM;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC,E","sources":["webpack://food-js-project/./js/modules/calc.js","webpack://food-js-project/./js/modules/cards.js","webpack://food-js-project/./js/modules/forms.js","webpack://food-js-project/./js/modules/modal.js","webpack://food-js-project/./js/modules/slider.js","webpack://food-js-project/./js/modules/tabs.js","webpack://food-js-project/./js/modules/timer.js","webpack://food-js-project/./js/services/services.js","webpack://food-js-project/webpack/bootstrap","webpack://food-js-project/webpack/runtime/define property getters","webpack://food-js-project/webpack/runtime/hasOwnProperty shorthand","webpack://food-js-project/webpack/runtime/make namespace object","webpack://food-js-project/./js/script.js"],"sourcesContent":["function calc() {\r\n    //----------------------------Calc\r\n\r\n    const result = document.querySelector('.calculating__result span');\r\n    // фільтри\r\n    let sex, height, weight, age, ratio;\r\n    // дефолтні значення  sex = 'female';  \r\n    if (localStorage.getItem('sex')) {\r\n        let sex = localStorage.getItem('sex');\r\n    } else {\r\n        sex = 'female';\r\n        localStorage.setItem('sex', 'female');\r\n    }\r\n\r\n    if (localStorage.getItem('ratio')) {\r\n        let ratio = localStorage.getItem('ratio');\r\n    } else {\r\n        ratio = 1.375;\r\n        localStorage.setItem('ratio', 1.375);\r\n    }\r\n\r\n    // завантажуєм вибір фільтру з локалсторедж, якщо ні тоді дефолт значення\r\n    function initLocalSettings(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n        // перебираємо всі елементи\r\n        elements.forEach(elem => {\r\n            // забираємо клас активностів кожного алементу\r\n            elem.classList.remove(activeClass);\r\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n        });\r\n    }\r\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    // функцію яку будемо викликати \r\n    function calcTotal() {\r\n        // якщо всі фільтри вибрані\r\n        //хочаб 1 фільтр не вибрано - false і пишемо повідомлення\r\n        if (!sex || !height || !weight || !age || !ratio) {\r\n            // якщо хоч 1 фільтр відсутній, пишемо повідомлення\r\n            result.textContent = '____';\r\n            return; // щоб перервати достроково функцію\r\n        }\r\n        if (sex === 'female') {\r\n            // Math.round -  округляэмо числа\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        } else {\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n\r\n    }\r\n    calcTotal();\r\n\r\n    // получаємо статичну інфу\r\n    function getStaticInformation(selector, activeClass) {\r\n        //отримуємо всі div\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        // elements.forEach(elem => { -   виправляємо баг з кліком між кнопками калькулятора\r\n        elements.forEach(elem => {\r\n            elem.addEventListener('click', (e) => {\r\n                //якщо користувач вибрав  фізичну активність\r\n                if (e.target.getAttribute('data-ratio')) {\r\n                    ratio = +e.target.getAttribute('data-ratio');\r\n                    // запамятовуємо вибір користувача\r\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n                } else {\r\n                    sex = e.target.getAttribute('id');\r\n                    // запамятовуємо вибір користувача\r\n                    localStorage.setItem('sex', e.target.getAttribute('id'));\r\n                }\r\n                // console.log(ratio,sex);\r\n\r\n                // перевіряємо активні кнопки\r\n                elements.forEach(elem => {\r\n                    // позбавляємо активності всі кнопки\r\n                    elem.classList.remove(activeClass);\r\n                });\r\n                e.target.classList.add(activeClass);\r\n                calcTotal();\r\n            });\r\n        });\r\n\r\n        //document.querySelector(parentSelector)\r\n    }\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    // функціяю обробляє кожен окремий інпут\r\n    function getDynamicInformation(selector) {\r\n        const input = document.querySelector(selector);\r\n        // оброботчик подій\r\n        input.addEventListener('input', () => {\r\n            // коли введені замість цифр букви, робимо червоний бордер\r\n            //match - шукаємо регулярний вираз ,не число /\\D/g глобально\r\n            if (input.value.match(/\\D/g)) {\r\n                input.style.border = '1px solid red';\r\n            } else {\r\n                input.style.border = 'none';\r\n            }\r\n\r\n\r\n            switch (input.getAttribute('id')) {\r\n                case 'height':\r\n                    height = +input.value;\r\n                    break;\r\n                case 'weight':\r\n                    weight = +input.value;\r\n                    break;\r\n                case 'age':\r\n                    age = +input.value;\r\n                    break;\r\n            }\r\n            calcTotal();\r\n        });\r\n\r\n    }\r\n\r\n    getDynamicInformation('#height');\r\n    getDynamicInformation('#weight');\r\n    getDynamicInformation('#age');\r\n}\r\n\r\n//module.exports = calc;\r\nexport default calc;","import {\r\n    getResource\r\n} from '../services/services';\r\n\r\nfunction cards() {\r\n\r\n    // -----------------CLASS -- Використовуємо класи для карточок\r\n\r\n    class MenuCard {\r\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) {\r\n            //свойства класу\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            //масив\r\n            this.classes = classes;\r\n            // в this.parent лежить DOM елемент\r\n            this.parent = document.querySelector(parentSelector);\r\n            // курс валют\r\n            this.transfer = 27;\r\n            this.changeToUAH();\r\n\r\n        }\r\n        //методи класу\r\n        changeToUAH() {\r\n            this.price = this.price * this.transfer;\r\n        }\r\n        //render метод щоб створити верстку\r\n        render() {\r\n            const element = document.createElement('div');\r\n            // дефоолтні дані, якщо нічого не передали\r\n            if (this.classes.length === 0) {\r\n                this.element = 'menu__item';\r\n                element.classList.add(this.element);\r\n            } else {\r\n                //classes масив, пройтись по кожному елементу\r\n                this.classes.forEach(className => element.classList.add(className));\r\n            }\r\n\r\n            //innerHTML - динамічно створює структуру верстку\r\n            element.innerHTML = `\r\n                    <img src=${this.src} alt=${this.alt}>\r\n                    <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                    <div class=\"menu__item-descr\">${this.descr}</div>\r\n                    <div class=\"menu__item-divider\"></div>\r\n                    <div class=\"menu__item-price\">\r\n                        <div class=\"menu__item-cost\">Цена:</div>\r\n                        <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                    </div>\r\n                \r\n          `;\r\n            //помістити елемент на сторінку\r\n            // получить батька\r\n            this.parent.append(element);\r\n        }\r\n    }\r\n\r\n\r\n    //       getResource('http://localhost:3000/menu')\r\n    //     .then(data => {\r\n    //        //деструктуризація обєкту з db.json \r\n    //     data.forEach(({img, altimg, title, descr, price}) => {\r\n    //         new MenuCard(img, altimg, title, descr, price, \".menu .container\").render();\r\n    //    });\r\n    //  });\r\n\r\n    //------------------Axios  \r\n    // axios.get\r\n    getResource('http://localhost:3000/menu')\r\n        .then(data => {\r\n            data.data.forEach(({\r\n                img,\r\n                altimg,\r\n                title,\r\n                descr,\r\n                price\r\n            }) => {\r\n                new MenuCard(img, altimg, title, descr, price, \".menu .container\").render();\r\n            });\r\n        });\r\n\r\n}\r\n//module.exports = cards;\r\nexport default cards;","import {\r\n    closeModal,\r\n    openModal\r\n} from './modal';\r\nimport {\r\n    postData\r\n} from '../services/services';\r\n\r\n\r\n\r\n\r\nfunction forms(formSelector, modalTimerId) {\r\n    //-------------------------------Forms\r\n\r\n    // получаємо всі форми по тегу form\r\n    const forms = document.querySelectorAll(formSelector);\r\n    const message = {\r\n        loading: 'img/form/spinner.svg',\r\n        success: 'Спасибо! Скоро мы с вами свяжемся',\r\n        failure: 'Что-то пошло не так...'\r\n    };\r\n\r\n    //під кожну форму підвязати функцію postData\r\n\r\n    // функція відповідає за постинг даних\r\n    // буде приймати якусь форму/аргумент\r\n\r\n    forms.forEach(item => {\r\n        bindPostData(item);\r\n    });\r\n\r\n\r\n    function bindPostData(form) {\r\n        form.addEventListener('submit', (e) => {\r\n            //відміняємо стандартну поведінку браузера\r\n            // а саме обновлення сторінки при кліці на кнопку форми\r\n            e.preventDefault();\r\n            //Спінер\r\n            let statusMessage = document.createElement('img');\r\n            statusMessage.src = message.loading;\r\n            statusMessage.style.cssText = `\r\n                display: block;\r\n                margin: 0 auto;\r\n            `;\r\n            //відправляємо statusMessage в HTML \r\n\r\n            //insertAdjacentElement - ставимо спінер після блоків\r\n            form.insertAdjacentElement('afterend', statusMessage);\r\n\r\n            const formData = new FormData(form);\r\n\r\n\r\n            //метод entries повертає масив власних властивостей обєкта\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n\r\n            postData('http://localhost:3000/requests', json)\r\n                //.then(data => data.text())// що приходить від сервера\r\n                .then(data => { // з сервера повертається якась data\r\n                    // колбек функція\r\n                    console.log(data); // в консоль що певернув сервер\r\n                    showThanksModal(message.success); // запуск функц. showThanksModal\r\n                    statusMessage.remove(); // спінер видаляємо\r\n                }).catch(() => { // якщо помилка\r\n                    showThanksModal(message.failure);\r\n                }).finally(() => { // дії які виконуються завжди\r\n                    form.reset(); // очистка форми\r\n                });\r\n\r\n        });\r\n\r\n    }\r\n\r\n    // красиві форми\r\n    function showThanksModal(message) {\r\n        const prevModalDialog = document.querySelector('.modal__dialog');\r\n        prevModalDialog.classList.add('hide'); // скриваємо контент\r\n        openModal('.modal', modalTimerId); // відкривання модальних вікон\r\n\r\n        const thanksModal = document.createElement('div');\r\n        thanksModal.classList.add('modal__dialog');\r\n        // верстка в вікні\r\n        thanksModal.innerHTML = `\r\n            <div class=\"modal__content\">\r\n                <div class=\"modal__close\" data-close>×</div>\r\n                <div class=\"modal__title\">${message}</div>\r\n            </div>\r\n        `;\r\n        //помістити на сторінку HTML\r\n        document.querySelector('.modal').append(thanksModal);\r\n\r\n        // якщо користувач повторно відкриє вікно\r\n        setTimeout(() => {\r\n            thanksModal.remove();\r\n            prevModalDialog.classList.add('show');\r\n            prevModalDialog.classList.remove('hide');\r\n            closeModal('.modal');\r\n        }, 4000);\r\n    }\r\n}\r\n\r\n//module.exports = forms;\r\nexport default forms;"," //функція відкриває вікно\r\n function openModal(modalSelector, modalTimerId) {\r\n     const modal = document.querySelector(modalSelector);\r\n     modal.classList.add('show');\r\n     modal.classList.remove('hide');\r\n     // modal.classList.toggle('show');// реалізація через toggle\r\n     // зупинити скрол сторінки при відкритому вікні попап\r\n     document.body.style.overflow = 'hidden'; //CSS- overflow: hidden;\r\n\r\n     console.log(modalTimerId);\r\n     //тільки якщо в нас є modalTimerId, тоді запускаємо очистику clearInterval\r\n     if (modalTimerId) {\r\n         //якщо користувач сам відкрив попап, через таймер попап не відкривається\r\n         clearInterval(modalTimerId);\r\n     }\r\n\r\n }\r\n\r\n\r\n\r\n\r\n //псевдомасив\r\n //функція закриває вікно\r\n function closeModal(modalSelector) {\r\n     const modal = document.querySelector(modalSelector);\r\n     modal.classList.add('hide');\r\n     modal.classList.remove('show');\r\n\r\n\r\n     // дозволити скролл  сторінки при Закритому вікні попап\r\n     document.body.style.overflow = ''; //CSS- overflow по дефолту\r\n }\r\n\r\n\r\n\r\n function modal(triggerSelector, modalSelector, modalTimerId) {\r\n     //triggerSelector, modalSelector - будемо використовувати при\r\n     //  виклиці функції Modal\r\n     //-----------------MODAL (popup)\r\n\r\n     const modalTrigger = document.querySelectorAll(triggerSelector),\r\n         modal = document.querySelector(modalSelector);\r\n\r\n     // функція відкриває модальне вікно\r\n     modalTrigger.forEach(btn => {\r\n         btn.addEventListener('click', () => openModal(modalSelector, modalTimerId));\r\n     });\r\n\r\n     // при кліці на пусте місце яке !modal_dialog закриваємо попап\r\n     modal.addEventListener('click', (e) => {\r\n         if (e.target === modal || e.target.getAttribute('data-close') == '') {\r\n             //closeModal - функцію викликаємо, працює після умови\r\n             closeModal(modalSelector);\r\n         }\r\n     });\r\n\r\n     // закриваємо попап при кліці на ESC - keydown\r\n     document.addEventListener('keydown', (e) => {\r\n         if (e.code === \"Escape\" && modal.classList.contains('show')) {\r\n             closeModal(modalSelector);\r\n         }\r\n     });\r\n\r\n\r\n\r\n     // функція щоб показувати 1 раз після скролу до низу сторінки\r\n     function showModalByScroll() {\r\n         if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight - 1) {\r\n             openModal(modalSelector, modalTimerId);\r\n             //removeEventListener - видаляємо Listener, попап показуємо 1 раз після скролу\r\n             window.removeEventListener('scroll', showModalByScroll);\r\n         }\r\n     }\r\n     window.addEventListener('scroll', showModalByScroll);\r\n\r\n }\r\n\r\n //module.exports = modal;\r\n export default modal;\r\n\r\n export {\r\n     closeModal\r\n };\r\n export {\r\n     openModal\r\n };","function slider({\r\n    //деструктуризація\r\n    container,\r\n    slide,\r\n    nextArrow,\r\n    prevArrow,\r\n    totalCounter,\r\n    currentCounter,\r\n    wrapper,\r\n    field\r\n}) {\r\n    //container - головний слайдер , slide кожен наступний\r\n\r\n    //-------------------------2 варіант Slider\r\n    let offset = 0; //відступ\r\n    let slideIndex = 1;\r\n\r\n    //отримання елементів з сторінки HTML\r\n    const slides = document.querySelectorAll(slide),\r\n        slider = document.querySelector(container),\r\n        prev = document.querySelector(prevArrow),\r\n        next = document.querySelector(nextArrow),\r\n        total = document.querySelector(totalCounter),\r\n        current = document.querySelector(currentCounter),\r\n        slidesWrapper = document.querySelector(wrapper),\r\n        slidesField = document.querySelector(field),\r\n        // ширина слайду\r\n        width = window.getComputedStyle(slidesWrapper).width;\r\n\r\n    //нумерація\r\n    if (slides.length < 10) {\r\n        //менеше 10 слайдів додаємо 0 перед числом 07 01 02 тд\r\n        total.textContent = `0${slides.length}`;\r\n        current.textContent = `0${slideIndex}`;\r\n    } else {\r\n        // більше 10 слайдів, просто показуєм кількість слайдів\r\n        total.textContent = slides.length;\r\n        current.textContent = slideIndex;\r\n    }\r\n\r\n    // задаємо для блоку ширину. 100 процентів і к-сть слайдів\r\n    slidesField.style.width = 100 * slides.length + '%';\r\n    //flex - всі фото в 1 рядок\r\n    slidesField.style.display = 'flex';\r\n    // transition - плавне переключення фото\r\n    slidesField.style.transition = '0.5s all';\r\n    // overflow ='hidden' - показуємо тільки 1 фото \r\n    slidesWrapper.style.overflow = 'hidden';\r\n\r\n    slides.forEach(slide => {\r\n        slide.style.width = width;\r\n    });\r\n\r\n    //position = 'relative'; \r\n    slider.style.position = 'relative';\r\n\r\n    //обгортка для всіх точок\r\n    const indicators = document.createElement('ol'),\r\n        dots = [];\r\n    indicators.classList.add('carousel-indicators');\r\n    //стилізуємо блок\r\n    indicators.style.cssText = `\r\n  position: absolute;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 15;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-right: 15%;\r\n  margin-left: 15%;\r\n  list-style: none;\r\n`;\r\n\r\n    //помістити обгортку в середину слайдеру\r\n    slider.append(indicators);\r\n\r\n    //кількість слайдів відповідає кількості точок\r\n    for (let i = 0; i < slides.length; i++) {\r\n        const dot = document.createElement('li');\r\n        //1 точка відповідає 1 слайду\r\n        // кожній точні атрибу data-slide-to і нумерацію\r\n        dot.setAttribute('data-slide-to', i + 1);\r\n        dot.style.cssText = `\r\nbox-sizing: content-box;\r\nflex: 0 1 auto;\r\nwidth: 30px;\r\nheight: 6px;\r\nmargin-right: 3px;\r\nmargin-left: 3px;\r\ncursor: pointer;\r\nbackground-color: #fff;\r\nbackground-clip: padding-box;\r\nborder-top: 10px solid transparent;\r\nborder-bottom: 10px solid transparent;\r\nopacity: .5;\r\ntransition: opacity .6s ease;\r\n`;\r\n        //активна перша точка\r\n        if (i == 0) {\r\n            dot.style.opacity = 1;\r\n        }\r\n        indicators.append(dot);\r\n        dots.push(dot);\r\n    }\r\n\r\n    function deleteNotDigits(str) {\r\n        return +str.replace(/\\D/g, '');\r\n    }\r\n\r\n\r\n\r\n    //обробник подій NEXT ------->>\r\n    next.addEventListener('click', () => {\r\n        //кінцевий варіант зміщення\r\n        //наш відступ offset буде рівний ширині слайдера width * кількість слайдів -1\r\n        //500px - в число і відрзати 2 символи, забираємо в числа букви PX slice(0, width.length - 2)\r\n\r\n        //replace - всі не числа в строці\r\n        // \\D - не числа , g - глобальність для всіх знаків\r\n        if (offset == deleteNotDigits(width) * (slides.length - 1)) {\r\n            //означ. що до листали до кінця і повернутись на початок\r\n            offset = 0;\r\n        } else {\r\n            // якщо не останній слайд --> зміщення\r\n            offset += deleteNotDigits(width); //+width.replace(/\\D/g, '');//.slice(0, width.length - 2);\r\n        }\r\n        //коли клікаємо вперед, здвигаємо слайд\r\n        //`translateX(-${offset})` - зміщуємо в ліво фото\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        //нумерація\r\n        // якщо дойшов до кінця слайдера переходимо на початок тобто 1\r\n        if (slideIndex == slides.length) {\r\n            slideIndex = 1;\r\n        } else {\r\n            slideIndex++;\r\n        }\r\n\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n\r\n        //дотси\r\n        dots.forEach(dot => dot.style.opacity = '0.5');\r\n        dots[slideIndex - 1].style.opacity = 1;\r\n    });\r\n\r\n    //обробник подій PREVIOS <<<-------\r\n    prev.addEventListener('click', () => {\r\n        //0 - коли перший слайд \r\n        if (offset == 0) {\r\n            // переміщуємось в кінець\r\n            //в offset записуємо останній слайд\r\n            offset = deleteNotDigits(width) * (slides.length - 1);\r\n        } else {\r\n            //якщо був не перший слайд, віднімаємо \r\n            offset -= deleteNotDigits(width); //+width.replace(/\\D/g, '');//.slice(0, width.length - 2);\r\n        }\r\n        //зміщення слайду\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        //нумерація\r\n        //коли на 1му слайді знаходимось\r\n        if (slideIndex == 1) {\r\n            //будемо зміщуватись в кінець\r\n            slideIndex = slides.length;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n\r\n        //дотси\r\n        dots.forEach(dot => dot.style.opacity = '0.5');\r\n        dots[slideIndex - 1].style.opacity = 1;\r\n\r\n    });\r\n\r\n    // кліки на дотси для переключення слайдів\r\n    dots.forEach(dot => {\r\n        dot.addEventListener('click', (e) => {\r\n            const slideTo = e.target.getAttribute('data-slide-to');\r\n            //3 точка 3 слайд, 4 -4 тд\r\n            slideIndex = slideTo;\r\n            offset = deleteNotDigits(width) * (slideTo - 1);\r\n            //зміщення слайду\r\n            slidesField.style.transform = `translateX(-${offset}px)`;\r\n            //змінюємо цифри індикатори\r\n            if (slides.length < 10) {\r\n                current.textContent = `0${slideIndex}`;\r\n            } else {\r\n                current.textContent = slideIndex;\r\n            }\r\n            //дотси\r\n            dots.forEach(dot => dot.style.opacity = '0.5');\r\n            dots[slideIndex - 1].style.opacity = 1;\r\n\r\n        });\r\n    });\r\n\r\n}\r\n\r\n//module.exports = slider;\r\nexport default slider;\r\n\r\n//--------------------Slider\r\n// ----------------------1 варіант\r\n\r\n//отримання елементів з сторінки HTML\r\n// const slides = document.querySelectorAll('.offer__slide'),\r\n//       prev = document.querySelector('.offer__slider-prev'),\r\n//       next = document.querySelector('.offer__slider-next'),\r\n//       total = document.querySelector('#total'),\r\n//       current = document.querySelector('#current');\r\n\r\n\r\n// //індекс оприділяє положення слайду, 1й слайд - 1\r\n// let slideIndex = 1;\r\n// showSlides(slideIndex);\r\n\r\n// if (slides.length < 10){\r\n//   //менеше 10 слайдів додаємо 0 перед числом 07 01 02 тд\r\n//   total.textContent = `0${slides.length}`;\r\n// }else{\r\n//   // більше 10 слайдів, просто показуєм кількість слайдів\r\n//   total.textContent = slides.length;\r\n// }\r\n\r\n// //функція по показу і скриванню слайдів\r\n// function showSlides(n) {\r\n//   //після остан. слайду відкривається 1ший (вправо)\r\n//      if(n > slides.length){\r\n//       slideIndex = 1;\r\n//      }\r\n//      // з 1го слайду на останній (вліво)\r\n//      if(n < 1){\r\n//       slideIndex = slides.length;\r\n//      }\r\n//    // приховати всі слайди, показати тільки 1\r\n//    slides.forEach(item => item.style.display = 'none');\r\n//    slides[slideIndex - 1].style.display = 'block';\r\n\r\n//    //поточний слайд\r\n//    if (slides.length < 10){\r\n//     //менеше 10 слайдів додаємо 0 перед числом 07 01 02 тд\r\n//     current.textContent = `0${slideIndex}`;\r\n//   }else{\r\n//     // більше 10 слайдів, просто показуєм кількість слайдів\r\n//     current.textContent = slideIndex;\r\n//   }\r\n\r\n// }\r\n//   // змінюємо наш слайд індекс\r\n//   function plusSlides(n){\r\n//     showSlides(slideIndex += n);\r\n//    }\r\n//    // оброботчики подій на prev, next\r\n//    prev.addEventListener('click', () => {\r\n//     plusSlides(-1);\r\n//    });\r\n//    next.addEventListener('click', () => {\r\n//     plusSlides (1);\r\n//    });","function tabs(tabsSelector, tabsContentSelector, tabsParentSelector, activeClass) {\r\n    // ---------------TABS\r\n\r\n    let tabs = document.querySelectorAll(tabsSelector),\r\n        tabsContent = document.querySelectorAll(tabsContentSelector),\r\n        tabsParent = document.querySelector(tabsParentSelector);\r\n    // скриваємо Таби\r\n    function hideTabContent() {\r\n        tabsContent.forEach(item => {\r\n            // item.style.display= 'none';\r\n            item.classList.add('hide');\r\n            item.classList.remove('show', 'fade');\r\n        });\r\n\r\n        tabs.forEach(item => {\r\n            item.classList.remove(activeClass);\r\n        });\r\n    }\r\n    // показуємо таби\r\n    //    0 - це перший слайдер\r\n    function showTabContent(i = 0) {\r\n        // tabsContent[i].style.display = 'block'; \r\n        // додаємо клас фейд з анімецією\r\n        tabsContent[i].classList.add('show', 'fade');\r\n        tabsContent[i].classList.remove('hide');\r\n\r\n        tabs[i].classList.add(activeClass);\r\n\r\n    }\r\n\r\n    // скриваємо всі слайдери\r\n    hideTabContent();\r\n    // показуємо 1й слайдер\r\n    showTabContent();\r\n\r\n    //Делегування подій, і оброботчик подій КЛІК\r\n    // колбек функція\r\n    tabsParent.addEventListener('click', function (event) {\r\n        // target - щоб можна було завжди використовувати\r\n        // event.target в інших част. коду\r\n        const target = event.target;\r\n        // перевірка на таргет і на contains що точно клікнули в ТАБ\r\n        if (target && target.classList.contains(tabsSelector.slice(1))) {\r\n            // оприділити номер кожного табу і викликати функцію showTabContent \r\n            //перебиремо всі Таби через forEach. \r\n            // item - кожен ТАБ який буду перебирати\r\n            // i - номер елементу ТАБУ по порядку\r\n            tabs.forEach((item, i) => {\r\n                //target-  той елемент в який клікнули\r\n                //буде співпадати з елементом який перебираємо forEach \r\n                // будемо викликати 2 функції hideTabContent showTabContent\r\n                if (target == item) {\r\n                    // скриваємо всі слайдери\r\n                    hideTabContent();\r\n                    // показуємо 1й слайдер. i - це номер табу який ми клікнули\r\n                    showTabContent(i);\r\n                }\r\n            });\r\n\r\n        }\r\n    });\r\n}\r\n\r\n//module.exports = tabs;\r\nexport default tabs;","function timer(id, deadline) {\r\n    //-------------TIMER\r\n    //const deadline = '2022-07-11';\r\n\r\n\r\n    //функція визн. різницю між дедлайном і настоящим часом\r\n    function getTimeRemaining(endtime) {\r\n        let days, hours, minutes, seconds;\r\n        // різниці між датами\r\n        const t = Date.parse(endtime) - Date.parse(new Date()); // переводимо стрінг в число, получимо к-сть. мілісекунд\r\n        // якщо дата відємна тоді таймер = 0\r\n        if (t <= 0) {\r\n            days = 0;\r\n            hours = 0;\r\n            minutes = 0;\r\n            seconds = 0;\r\n        } else {\r\n            // кількість днів в таймері. мілісекунди поділити на / міліске в одномі дні\r\n            days = Math.floor(t / (1000 * 60 * 60 * 24)), //дны = мілісекунди * сек * год *24 год\r\n                hours = Math.floor((t / (1000 * 60 * 60) % 24)), //мілісек / на мілісек в 1 годині.   %24 залишок від 24\r\n                minutes = Math.floor((t / 1000 / 60) % 60), //t / 1000- сек,/ 60- хв, %60- залишви від 60\r\n                seconds = Math.floor((t / 1000) % 60);\r\n        }\r\n\r\n        // повертаємо обєкт з функції\r\n        return {\r\n            'total': t,\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds\r\n        };\r\n    }\r\n\r\n    // Додаємо 0 перед 8 9 7 6 \r\n    function getZero(num) {\r\n        if (num >= 0 && num < 10) {\r\n            return `0${num}`;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n    // встановлюємо таймер на сторінку\r\n    function setClock(selector, endtime) { // блок таймер з html і час \r\n        const timer = document.querySelector(selector), //timer\r\n            days = timer.querySelector('#days'),\r\n            hours = timer.querySelector('#hours'),\r\n            minutes = timer.querySelector('#minutes'),\r\n            seconds = timer.querySelector('#seconds'),\r\n            // запускати функцію updateClock кожну секунду, \r\n            //таймер кожну секунду обновляюється\r\n            timeInterval = setInterval(updateClock, 1000); // setInterval - запускає кожну секунду функцію\r\n\r\n        updateClock();\r\n\r\n        function updateClock() {\r\n            // розрахунок часу який залишився\r\n            const t = getTimeRemaining(endtime);\r\n            // помістити на сторінку\r\n            days.innerHTML = getZero(t.days);\r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n\r\n            //зупинаэмо таймер timeInterval\r\n            // якщо час вже вийшов , 0 сек, зупиняємо\r\n            if (t.total <= 0) {\r\n                clearInterval(timeInterval);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    setClock(id, deadline);\r\n}\r\n\r\n//module.exports = timer;\r\nexport default timer;","// url i data - дані які будуть поститись в функц.\r\n//1. postData налаштовує запит\r\n//2.  фетчить, тобто відправляє запит на серв, получає відповідь\r\n//3. перетворює відповідь в json\r\n\r\n// весь код асинхронний, коли запускається функц.postData\r\n// ми робимо запит який іде на серв(асинхронний)\r\n// але з фетча з серв нам ще нічого не повернулось, буде помилка\r\n//async - в середині функції буде асинхр оператор\r\n//await - ставимо перед тим де потрібно дочекатись відповіді\r\n// async await завжди в ПАРІ\r\nconst postData = async (url, data) => {\r\n    // в середині поміщаємо проміс від фетча\r\n    let res = await fetch(url, {\r\n        method: \"POST\", // яким образом\r\n        headers: { // і що саме відправляємо\r\n            'Content-type': 'application/json'\r\n        },\r\n        body: data\r\n    });\r\n    return await res.json(); //проміс \r\n\r\n};\r\n\r\nasync function getResource(url) {\r\n    let res = await fetch(url);\r\n\r\n    if (!res.ok) {\r\n        // обєкт помилки\r\n        throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n    }\r\n\r\n    return await res.json();\r\n\r\n}\r\n\r\n\r\n\r\nexport {\r\n    postData\r\n};\r\nexport {\r\n    getResource\r\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","//ES6 Modules\r\nimport tabs from './modules/tabs';\r\nimport modal from './modules/modal';\r\nimport timer from './modules/timer';\r\nimport cards from './modules/cards';\r\nimport calc from './modules/calc';\r\nimport forms from './modules/forms';\r\nimport slider from './modules/slider';\r\nimport {\r\n  openModal\r\n} from './modules/modal';\r\n\r\n// глобальний оброботчик собитій - DOMContentLoaded\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n  // імпортуємо функцій\r\n  // const tabs = require('./modules/tabs'),\r\n  //   modal = require('./modules/modal'),\r\n  //   timer = require('./modules/timer'),\r\n  //   cards = require('./modules/cards'),\r\n  //   calc = require('./modules/calc'),\r\n  //   forms = require('./modules/forms'),\r\n  //   slider = require('./modules/slider');\r\n\r\n  // визиваємо модальне вікно ( попап) через деякий час\r\n  const modalTimerId = setTimeout(() => openModal('.modal', modalTimerId), 30000);\r\n\r\n  // виклик функцій\r\n  tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\r\n  modal('[data-modal]', '.modal', modalTimerId);\r\n  timer('.timer', '2020-06-11');\r\n  cards();\r\n  calc();\r\n  forms('form', modalTimerId);\r\n  slider({\r\n    //обєкт який буде зберігати налаштування з файлу slider.js\r\n    container: '.offer__slider',\r\n    nextArrow: '.offer__slider-next',\r\n    prevArrow: '.offer__slider-prev',\r\n    totalCounter: '#total',\r\n    currentCounter: '#current',\r\n    wrapper: '.offer__slider-wrapper',\r\n    slide: '.offer__slide',\r\n    field: '.offer__slider-inner'\r\n  });\r\n\r\n\r\n});"],"names":[],"sourceRoot":""}