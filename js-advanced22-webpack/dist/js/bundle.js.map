{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;UCbA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;ACrBA;;AAEA;AACA,iBAAiB,mBAAO,CAAC,gCAAQ;;AAEjC,wCAAwC;;AAExC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;AAGA","sources":["webpack://js-advanced22-webpack/./src/js/main.js","webpack://js-advanced22-webpack/webpack/bootstrap","webpack://js-advanced22-webpack/./src/js/script.js"],"sourcesContent":["\r\nfunction myModule() {\r\n    this.hello = function() {\r\n        console.log('hello');\r\n    };\r\n    this.goodbye = function(){\r\n        console.log('bye!');\r\n    };\r\n}\r\n//потрібно щоб функція myModule перейшла з файлу main.js ---> index.js\r\n// де будемо використовувати її багато раз і використовувати її методи\r\n\r\n//-------CommonJS \r\nmodule.exports = myModule;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\n//імпортуємо функцію з файлу main.js\n\n//називати можна будь як, require для імпорту , і шлях без .js розширення\nconst myModule = require('./main');\n\nconst myModuleInstance = new myModule();//обєкт\n\n//тепер можна використовувати методи з файлу main.js\nmyModuleInstance.hello();\nmyModuleInstance.goodbye();\n//!!!!!!!!-- наш браузер не збирає модулі самостійно---!!! видасть помилку\n//модульна система має бути зірана в 1 файл\n// для зборки модулів зборщик ----- webpack\n\n//gulp планувальник задач!!\n// за допомогою нього виконуються різні таски при різних ситуаціях\n//галп не збирає, лише підключає модулі і запускає задачі\n\n//webpack - зборщик модулів!!! настроюєм і запускаємо щоб збирав проект\n\n//за допомогою галп можна запустити вебпак\n\n\n// головний файл має називатись index.js , строгов в папці src\n"],"names":[],"sourceRoot":""}